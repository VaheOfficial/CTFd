"""add_flag_configuration_fields

Revision ID: 894463314af6
Revises: 
Create Date: 2025-09-03 16:44:02.716360

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '894463314af6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_two_factor_codes_user_id', table_name='two_factor_codes')
    op.drop_table('two_factor_codes')
    op.drop_table('two_factor_settings')
    op.drop_index('ix_notifications_id', table_name='notifications')
    op.drop_table('notifications')
    op.add_column('challenges', sa.Column('flag_type', postgresql.ENUM('STATIC', 'DYNAMIC_HMAC', name='flagtype'), nullable=False))
    op.add_column('challenges', sa.Column('flag_format', sa.String(length=100), nullable=False))
    op.add_column('challenges', sa.Column('static_flag', sa.String(length=255), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('challenges', 'static_flag')
    op.drop_column('challenges', 'flag_format')
    op.drop_column('challenges', 'flag_type')
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('is_global', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='notifications_created_by_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='notifications_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    op.create_index('ix_notifications_id', 'notifications', ['id'], unique=False)
    op.create_table('two_factor_settings',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('email_2fa_enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('backup_email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_code_sent_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('failed_attempts', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('locked_until', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='two_factor_settings_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='two_factor_settings_pkey'),
    sa.UniqueConstraint('user_id', name='two_factor_settings_user_id_key')
    )
    op.create_table('two_factor_codes',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(length=6), autoincrement=False, nullable=False),
    sa.Column('purpose', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('used_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_used', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='two_factor_codes_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='two_factor_codes_pkey')
    )
    op.create_index('ix_two_factor_codes_user_id', 'two_factor_codes', ['user_id'], unique=False)
    # ### end Alembic commands ###
